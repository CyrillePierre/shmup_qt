#############################################################################
# Makefile for building: jeu
# Generated by qmake (2.01a) (Qt 4.6.2) on: mer. janv. 18 11:08:17 2012
# Project:  jeu.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile jeu.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = allyShip.cpp \
		ball.cpp \
		constantAction.cpp \
		enemyShip.cpp \
		enemyShipAction.cpp \
		linearAction.cpp \
		listAction.cpp \
		main.cpp \
		map.cpp \
		object.cpp \
		objectFactory.cpp \
		ship.cpp \
		simulateur.cpp moc_allyShip.cpp \
		moc_enemyShipAction.cpp \
		moc_listAction.cpp \
		moc_map.cpp \
		moc_simulateur.cpp
OBJECTS       = allyShip.o \
		ball.o \
		constantAction.o \
		enemyShip.o \
		enemyShipAction.o \
		linearAction.o \
		listAction.o \
		main.o \
		map.o \
		object.o \
		objectFactory.o \
		ship.o \
		simulateur.o \
		moc_allyShip.o \
		moc_enemyShipAction.o \
		moc_listAction.o \
		moc_map.o \
		moc_simulateur.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		jeu.pro
QMAKE_TARGET  = jeu
DESTDIR       = 
TARGET        = jeu

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_interface.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: jeu.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile jeu.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile jeu.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/jeu1.0.0 || $(MKDIR) .tmp/jeu1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/jeu1.0.0/ && $(COPY_FILE) --parents allyShip.hpp ball.hpp constantAction.hpp enemyShip.hpp enemyShipAction.hpp linearAction.hpp listAction.hpp map.hpp object.hpp objectFactory.hpp pool.hpp ship.hpp simulateur.hpp singleton.hpp pool.ipp .tmp/jeu1.0.0/ && $(COPY_FILE) --parents allyShip.cpp ball.cpp constantAction.cpp enemyShip.cpp enemyShipAction.cpp linearAction.cpp listAction.cpp main.cpp map.cpp object.cpp objectFactory.cpp ship.cpp simulateur.cpp .tmp/jeu1.0.0/ && $(COPY_FILE) --parents interface.ui .tmp/jeu1.0.0/ && (cd `dirname .tmp/jeu1.0.0` && $(TAR) jeu1.0.0.tar jeu1.0.0 && $(COMPRESS) jeu1.0.0.tar) && $(MOVE) `dirname .tmp/jeu1.0.0`/jeu1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/jeu1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_allyShip.cpp moc_enemyShipAction.cpp moc_listAction.cpp moc_map.cpp moc_simulateur.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_allyShip.cpp moc_enemyShipAction.cpp moc_listAction.cpp moc_map.cpp moc_simulateur.cpp
moc_allyShip.cpp: ship.hpp \
		object.hpp \
		allyShip.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) allyShip.hpp -o moc_allyShip.cpp

moc_enemyShipAction.cpp: enemyShipAction.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) enemyShipAction.hpp -o moc_enemyShipAction.cpp

moc_listAction.cpp: enemyShipAction.hpp \
		listAction.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) listAction.hpp -o moc_listAction.cpp

moc_map.cpp: objectFactory.hpp \
		enemyShipAction.hpp \
		map.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) map.hpp -o moc_map.cpp

moc_simulateur.cpp: singleton.hpp \
		simulateur.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) simulateur.hpp -o moc_simulateur.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_interface.h
compiler_uic_clean:
	-$(DEL_FILE) ui_interface.h
ui_interface.h: interface.ui
	/usr/bin/uic-qt4 interface.ui -o ui_interface.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

allyShip.o: allyShip.cpp allyShip.hpp \
		ship.hpp \
		object.hpp \
		ball.hpp \
		pool.hpp \
		singleton.hpp \
		pool.ipp \
		simulateur.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o allyShip.o allyShip.cpp

ball.o: ball.cpp pool.hpp \
		singleton.hpp \
		pool.ipp \
		simulateur.hpp \
		ball.hpp \
		object.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ball.o ball.cpp

constantAction.o: constantAction.cpp constantAction.hpp \
		enemyShipAction.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o constantAction.o constantAction.cpp

enemyShip.o: enemyShip.cpp enemyShip.hpp \
		ship.hpp \
		object.hpp \
		enemyShipAction.hpp \
		ball.hpp \
		pool.hpp \
		singleton.hpp \
		pool.ipp \
		simulateur.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enemyShip.o enemyShip.cpp

enemyShipAction.o: enemyShipAction.cpp enemyShipAction.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enemyShipAction.o enemyShipAction.cpp

linearAction.o: linearAction.cpp linearAction.hpp \
		enemyShipAction.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o linearAction.o linearAction.cpp

listAction.o: listAction.cpp listAction.hpp \
		enemyShipAction.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o listAction.o listAction.cpp

main.o: main.cpp simulateur.hpp \
		singleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

map.o: map.cpp map.hpp \
		objectFactory.hpp \
		enemyShipAction.hpp \
		allyShip.hpp \
		ship.hpp \
		object.hpp \
		simulateur.hpp \
		singleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o map.o map.cpp

object.o: object.cpp object.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o object.o object.cpp

objectFactory.o: objectFactory.cpp objectFactory.hpp \
		enemyShipAction.hpp \
		object.hpp \
		pool.hpp \
		singleton.hpp \
		pool.ipp \
		simulateur.hpp \
		enemyShip.hpp \
		ship.hpp \
		constantAction.hpp \
		linearAction.hpp \
		listAction.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objectFactory.o objectFactory.cpp

ship.o: ship.cpp ship.hpp \
		object.hpp \
		ball.hpp \
		simulateur.hpp \
		singleton.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ship.o ship.cpp

simulateur.o: simulateur.cpp simulateur.hpp \
		singleton.hpp \
		map.hpp \
		objectFactory.hpp \
		enemyShipAction.hpp \
		object.hpp \
		pool.hpp \
		pool.ipp \
		ball.hpp \
		enemyShip.hpp \
		ship.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulateur.o simulateur.cpp

moc_allyShip.o: moc_allyShip.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_allyShip.o moc_allyShip.cpp

moc_enemyShipAction.o: moc_enemyShipAction.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_enemyShipAction.o moc_enemyShipAction.cpp

moc_listAction.o: moc_listAction.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_listAction.o moc_listAction.cpp

moc_map.o: moc_map.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_map.o moc_map.cpp

moc_simulateur.o: moc_simulateur.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_simulateur.o moc_simulateur.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

